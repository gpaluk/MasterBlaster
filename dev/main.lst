                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.6.0 #9615 (MINGW64)
                              4 ;--------------------------------------------------------
                              5 	.module main
                              6 	.optsdcc -mz80
                              7 	
                              8 ;--------------------------------------------------------
                              9 ; Public variables in this module
                             10 ;--------------------------------------------------------
                             11 	.globl ___SMS__SDSC_signature
                             12 	.globl ___SMS__SDSC_descr
                             13 	.globl ___SMS__SDSC_name
                             14 	.globl ___SMS__SDSC_author
                             15 	.globl ___SMS__SEGA_signature
                             16 	.globl _main
                             17 	.globl _loadGraphics2vram
                             18 	.globl _Player1Init
                             19 	.globl _checkgamepause
                             20 	.globl _InitConsole
                             21 	.globl _InterruptHandler
                             22 	.globl _PSGSFXFrame
                             23 	.globl _PSGFrame
                             24 	.globl _PSGSFXGetStatus
                             25 	.globl _PSGSFXPlay
                             26 	.globl _PSGPlayNoRepeat
                             27 	.globl _PSGPlay
                             28 	.globl _SMS_VRAMmemsetW
                             29 	.globl _SMS_setLineCounter
                             30 	.globl _SMS_setLineInterruptHandler
                             31 	.globl _SMS_resetPauseRequest
                             32 	.globl _SMS_queryPauseRequested
                             33 	.globl _SMS_getKeysStatus
                             34 	.globl _SMS_loadSpritePalette
                             35 	.globl _SMS_setSpritePaletteColor
                             36 	.globl _SMS_setBGPaletteColor
                             37 	.globl _SMS_copySpritestoSAT
                             38 	.globl _SMS_finalizeSprites
                             39 	.globl _SMS_addSprite
                             40 	.globl _SMS_initSprites
                             41 	.globl _SMS_loadPSGaidencompressedTiles
                             42 	.globl _SMS_waitForVBlank
                             43 	.globl _SMS_VDPturnOnFeature
                             44 	.globl _SMS_init
                             45 	.globl _volume_atenuation
                             46 	.globl _frame_counter
                             47 	.globl _player1_direction
                             48 	.globl _player1_current_frame
                             49 	.globl _player1_y
                             50 	.globl _player1_x
                             51 	.globl _gamepause
                             52 	.globl _numinterrupts
                             53 	.globl _SMS_SRAM
                             54 	.globl _SRAM_bank_to_be_mapped_on_slot2
                             55 	.globl _ROM_bank_to_be_mapped_on_slot2
                             56 	.globl _Player1Update
                             57 	.globl _Player1UpdatePosition
                             58 	.globl _Player1UpdateDraw
                             59 ;--------------------------------------------------------
                             60 ; special function registers
                             61 ;--------------------------------------------------------
                             62 ;--------------------------------------------------------
                             63 ; ram data
                             64 ;--------------------------------------------------------
                             65 	.area _DATA
                     FFFF    66 _ROM_bank_to_be_mapped_on_slot2	=	0xffff
                     FFFC    67 _SRAM_bank_to_be_mapped_on_slot2	=	0xfffc
                     8000    68 _SMS_SRAM	=	0x8000
   0000                      69 _numinterrupts::
   0000                      70 	.ds 1
   0001                      71 _gamepause::
   0001                      72 	.ds 1
   0002                      73 _player1_x::
   0002                      74 	.ds 1
   0003                      75 _player1_y::
   0003                      76 	.ds 1
   0004                      77 _player1_current_frame::
   0004                      78 	.ds 1
   0005                      79 _player1_direction::
   0005                      80 	.ds 1
   0006                      81 _frame_counter::
   0006                      82 	.ds 1
   0007                      83 _volume_atenuation::
   0007                      84 	.ds 1
                             85 ;--------------------------------------------------------
                             86 ; ram data
                             87 ;--------------------------------------------------------
                             88 	.area _INITIALIZED
                             89 ;--------------------------------------------------------
                             90 ; absolute external ram data
                             91 ;--------------------------------------------------------
                             92 	.area _DABS (ABS)
                             93 ;--------------------------------------------------------
                             94 ; global & static initialisations
                             95 ;--------------------------------------------------------
                             96 	.area _HOME
                             97 	.area _GSINIT
                             98 	.area _GSFINAL
                             99 	.area _GSINIT
                            100 ;--------------------------------------------------------
                            101 ; Home
                            102 ;--------------------------------------------------------
                            103 	.area _HOME
                            104 	.area _HOME
                            105 ;--------------------------------------------------------
                            106 ; code
                            107 ;--------------------------------------------------------
                            108 	.area _CODE
                            109 ;Core\funcs.h:6: void InterruptHandler(void)
                            110 ;	---------------------------------
                            111 ; Function InterruptHandler
                            112 ; ---------------------------------
   0000                     113 _InterruptHandler::
                            114 ;Core\funcs.h:9: }
   0000 C9            [10]  115 	ret
                            116 ;Core\funcs.h:11: void InitConsole(void)
                            117 ;	---------------------------------
                            118 ; Function InitConsole
                            119 ; ---------------------------------
   0001                     120 _InitConsole::
                            121 ;Core\funcs.h:14: SMS_init();
   0001 CDr00r00      [17]  122 	call	_SMS_init
                            123 ;Core\funcs.h:17: SMS_getKeysStatus();
   0004 CDr00r00      [17]  124 	call	_SMS_getKeysStatus
                            125 ;Core\funcs.h:20: SMS_setLineInterruptHandler(&InterruptHandler);
   0007 21r00r00      [10]  126 	ld	hl,#_InterruptHandler
   000A E5            [11]  127 	push	hl
   000B CDr00r00      [17]  128 	call	_SMS_setLineInterruptHandler
                            129 ;Core\funcs.h:21: SMS_setLineCounter (192);
   000E 26 C0         [ 7]  130 	ld	h,#0xc0
   0010 E3            [19]  131 	ex	(sp),hl
   0011 33            [ 6]  132 	inc	sp
   0012 CDr00r00      [17]  133 	call	_SMS_setLineCounter
   0015 33            [ 6]  134 	inc	sp
                            135 ;Core\funcs.h:22: SMS_enableLineInterrupt();
   0016 21 10 00      [10]  136 	ld	hl,#0x0010
   0019 CDr00r00      [17]  137 	call	_SMS_VDPturnOnFeature
                            138 ;Core\funcs.h:25: SMS_VDPturnOnFeature(VDPFEATURE_LEFTCOLBLANK);
   001C 21 20 00      [10]  139 	ld	hl,#0x0020
   001F C3r00r00      [10]  140 	jp  _SMS_VDPturnOnFeature
                            141 ;Core\funcs.h:28: void checkgamepause()
                            142 ;	---------------------------------
                            143 ; Function checkgamepause
                            144 ; ---------------------------------
   0022                     145 _checkgamepause::
                            146 ;Core\funcs.h:30: if(SMS_queryPauseRequested())
   0022 CDr00r00      [17]  147 	call	_SMS_queryPauseRequested
   0025 CB 45         [ 8]  148 	bit	0,l
   0027 C8            [11]  149 	ret	Z
                            150 ;Core\funcs.h:32: SMS_resetPauseRequest();
   0028 CDr00r00      [17]  151 	call	_SMS_resetPauseRequest
                            152 ;Core\funcs.h:33: gamepause=1-gamepause;
   002B 21r01r00      [10]  153 	ld	hl,#_gamepause
   002E 3E 01         [ 7]  154 	ld	a,#0x01
   0030 96            [ 7]  155 	sub	a, (hl)
   0031 77            [ 7]  156 	ld	(hl),a
                            157 ;Core\funcs.h:34: if(gamepause==1)
   0032 3Ar01r00      [13]  158 	ld	a,(#_gamepause + 0)
   0035 3D            [ 4]  159 	dec	a
   0036 20 09         [12]  160 	jr	NZ,00102$
                            161 ;Core\funcs.h:35: PSGPlayNoRepeat(pause_psg);
   0038 21r00r00      [10]  162 	ld	hl,#_pause_psg
   003B E5            [11]  163 	push	hl
   003C CDr00r00      [17]  164 	call	_PSGPlayNoRepeat
   003F F1            [10]  165 	pop	af
   0040 C9            [10]  166 	ret
   0041                     167 00102$:
                            168 ;Core\funcs.h:37: PSGPlay(music_psg);
   0041 21r00r00      [10]  169 	ld	hl,#_music_psg
   0044 E5            [11]  170 	push	hl
   0045 CDr00r00      [17]  171 	call	_PSGPlay
   0048 F1            [10]  172 	pop	af
   0049 C9            [10]  173 	ret
                            174 ;Players/players.h:29: void Player1Init()
                            175 ;	---------------------------------
                            176 ; Function Player1Init
                            177 ; ---------------------------------
   004A                     178 _Player1Init::
                            179 ;Players/players.h:31: player1_direction = DOWN;
   004A 21r05r00      [10]  180 	ld	hl,#_player1_direction + 0
   004D 36 01         [10]  181 	ld	(hl), #0x01
                            182 ;Players/players.h:32: player1_x = 128-8;
   004F 21r02r00      [10]  183 	ld	hl,#_player1_x + 0
   0052 36 78         [10]  184 	ld	(hl), #0x78
                            185 ;Players/players.h:33: player1_y = 96-12;
   0054 21r03r00      [10]  186 	ld	hl,#_player1_y + 0
   0057 36 54         [10]  187 	ld	(hl), #0x54
                            188 ;Players/players.h:34: player1_current_frame = 0;
   0059 21r04r00      [10]  189 	ld	hl,#_player1_current_frame + 0
   005C 36 00         [10]  190 	ld	(hl), #0x00
   005E C9            [10]  191 	ret
                            192 ;Players/players.h:37: void Player1Update(unsigned char time)
                            193 ;	---------------------------------
                            194 ; Function Player1Update
                            195 ; ---------------------------------
   005F                     196 _Player1Update::
                            197 ;Players/players.h:39: Player1UpdatePosition();
   005F CDr6Er00      [17]  198 	call	_Player1UpdatePosition
                            199 ;Players/players.h:40: Player1UpdateDraw(time);
   0062 21 02 00      [10]  200 	ld	hl, #2+0
   0065 39            [11]  201 	add	hl, sp
   0066 7E            [ 7]  202 	ld	a, (hl)
   0067 F5            [11]  203 	push	af
   0068 33            [ 6]  204 	inc	sp
   0069 CDrB1r00      [17]  205 	call	_Player1UpdateDraw
   006C 33            [ 6]  206 	inc	sp
   006D C9            [10]  207 	ret
                            208 ;Players/players.h:43: void Player1UpdatePosition()
                            209 ;	---------------------------------
                            210 ; Function Player1UpdatePosition
                            211 ; ---------------------------------
   006E                     212 _Player1UpdatePosition::
                            213 ;Players/players.h:45: if(SMS_getKeysStatus() & PORT_A_KEY_UP)
   006E CDr00r00      [17]  214 	call	_SMS_getKeysStatus
   0071 CB 45         [ 8]  215 	bit	0, l
   0073 28 0B         [12]  216 	jr	Z,00104$
                            217 ;Players/players.h:47: player1_direction = UP;
   0075 21r05r00      [10]  218 	ld	hl,#_player1_direction + 0
   0078 36 00         [10]  219 	ld	(hl), #0x00
                            220 ;Players/players.h:48: player1_y--;
   007A 21r03r00      [10]  221 	ld	hl, #_player1_y+0
   007D 35            [11]  222 	dec	(hl)
   007E 18 10         [12]  223 	jr	00105$
   0080                     224 00104$:
                            225 ;Players/players.h:50: else if(SMS_getKeysStatus() & PORT_A_KEY_DOWN)
   0080 CDr00r00      [17]  226 	call	_SMS_getKeysStatus
   0083 CB 4D         [ 8]  227 	bit	1, l
   0085 28 09         [12]  228 	jr	Z,00105$
                            229 ;Players/players.h:52: player1_direction = DOWN;
   0087 21r05r00      [10]  230 	ld	hl,#_player1_direction + 0
   008A 36 01         [10]  231 	ld	(hl), #0x01
                            232 ;Players/players.h:53: player1_y++;
   008C 21r03r00      [10]  233 	ld	hl, #_player1_y+0
   008F 34            [11]  234 	inc	(hl)
   0090                     235 00105$:
                            236 ;Players/players.h:56: if(SMS_getKeysStatus() & PORT_A_KEY_LEFT)
   0090 CDr00r00      [17]  237 	call	_SMS_getKeysStatus
   0093 CB 55         [ 8]  238 	bit	2, l
   0095 28 0A         [12]  239 	jr	Z,00109$
                            240 ;Players/players.h:58: player1_direction = LEFT;
   0097 21r05r00      [10]  241 	ld	hl,#_player1_direction + 0
   009A 36 02         [10]  242 	ld	(hl), #0x02
                            243 ;Players/players.h:59: player1_x--;
   009C 21r02r00      [10]  244 	ld	hl, #_player1_x+0
   009F 35            [11]  245 	dec	(hl)
   00A0 C9            [10]  246 	ret
   00A1                     247 00109$:
                            248 ;Players/players.h:61: else if(SMS_getKeysStatus() & PORT_A_KEY_RIGHT)
   00A1 CDr00r00      [17]  249 	call	_SMS_getKeysStatus
   00A4 CB 5D         [ 8]  250 	bit	3, l
   00A6 C8            [11]  251 	ret	Z
                            252 ;Players/players.h:63: player1_direction = RIGHT;
   00A7 21r05r00      [10]  253 	ld	hl,#_player1_direction + 0
   00AA 36 03         [10]  254 	ld	(hl), #0x03
                            255 ;Players/players.h:64: player1_x++;
   00AC 21r02r00      [10]  256 	ld	hl, #_player1_x+0
   00AF 34            [11]  257 	inc	(hl)
   00B0 C9            [10]  258 	ret
                            259 ;Players/players.h:68: void Player1UpdateDraw(unsigned char time)
                            260 ;	---------------------------------
                            261 ; Function Player1UpdateDraw
                            262 ; ---------------------------------
   00B1                     263 _Player1UpdateDraw::
   00B1 DD E5         [15]  264 	push	ix
   00B3 DD 21 00 00   [14]  265 	ld	ix,#0
   00B7 DD 39         [15]  266 	add	ix,sp
   00B9 F5            [11]  267 	push	af
   00BA F5            [11]  268 	push	af
   00BB 3B            [ 6]  269 	dec	sp
                            270 ;Players/players.h:71: unsigned char direction_offset = 0;
   00BC 0E 00         [ 7]  271 	ld	c,#0x00
                            272 ;Players/players.h:73: if(player1_direction == LEFT)
   00BE 3Ar05r00      [13]  273 	ld	a,(#_player1_direction + 0)
   00C1 D6 02         [ 7]  274 	sub	a, #0x02
   00C3 20 04         [12]  275 	jr	NZ,00264$
   00C5 3E 01         [ 7]  276 	ld	a,#0x01
   00C7 18 01         [12]  277 	jr	00265$
   00C9                     278 00264$:
   00C9 AF            [ 4]  279 	xor	a,a
   00CA                     280 00265$:
   00CA 47            [ 4]  281 	ld	b,a
   00CB B7            [ 4]  282 	or	a, a
   00CC 28 04         [12]  283 	jr	Z,00110$
                            284 ;Players/players.h:75: direction_offset = PLAYER1_LR_NUMBER_TILES_FRAMES_BOTH_DIRECTIONS >> 1;
   00CE 0E 0C         [ 7]  285 	ld	c,#0x0c
   00D0 18 1A         [12]  286 	jr	00111$
   00D2                     287 00110$:
                            288 ;Players/players.h:77: else if(player1_direction == RIGHT)
   00D2 3Ar05r00      [13]  289 	ld	a,(#_player1_direction + 0)
                            290 ;Players/players.h:79: direction_offset = 0;
   00D5 D6 03         [ 7]  291 	sub	a,#0x03
   00D7 20 03         [12]  292 	jr	NZ,00107$
   00D9 4F            [ 4]  293 	ld	c,a
   00DA 18 10         [12]  294 	jr	00111$
   00DC                     295 00107$:
                            296 ;Players/players.h:81: else if(player1_direction == DOWN)
   00DC 3Ar05r00      [13]  297 	ld	a,(#_player1_direction + 0)
                            298 ;Players/players.h:83: direction_offset = 0;
   00DF 3D            [ 4]  299 	dec	a
   00E0 20 03         [12]  300 	jr	NZ,00104$
   00E2 4F            [ 4]  301 	ld	c,a
   00E3 18 07         [12]  302 	jr	00111$
   00E5                     303 00104$:
                            304 ;Players/players.h:85: else if(player1_direction == UP)
   00E5 3Ar05r00      [13]  305 	ld	a,(#_player1_direction + 0)
                            306 ;Players/players.h:87: direction_offset = 0;
   00E8 B7            [ 4]  307 	or	a,a
   00E9 20 01         [12]  308 	jr	NZ,00111$
   00EB 4F            [ 4]  309 	ld	c,a
   00EC                     310 00111$:
                            311 ;Players/players.h:91: if(player1_direction == UP)
   00EC 3Ar05r00      [13]  312 	ld	a,(#_player1_direction + 0)
   00EF B7            [ 4]  313 	or	a, a
   00F0 20 63         [12]  314 	jr	NZ,00125$
                            315 ;Players/players.h:93: for(j=0; j<3; j++)
   00F2 DD 36 FB 00   [19]  316 	ld	-5 (ix),#0x00
   00F6 DD 36 FF 00   [19]  317 	ld	-1 (ix),#0x00
                            318 ;Players/players.h:95: for(i=0; i<2; i++) {
   00FA                     319 00163$:
   00FA DD 7E FB      [19]  320 	ld	a,-5 (ix)
   00FD 07            [ 4]  321 	rlca
   00FE 07            [ 4]  322 	rlca
   00FF 07            [ 4]  323 	rlca
   0100 E6 F8         [ 7]  324 	and	a,#0xf8
   0102 DD 77 FE      [19]  325 	ld	-2 (ix),a
   0105 1E 00         [ 7]  326 	ld	e,#0x00
   0107                     327 00144$:
                            328 ;Players/players.h:96: SMS_addSprite(player1_x+(i<<3), player1_y+(j<<3), PLAYER1_UP_SPRITE_TILES_POSITION + direction_offset + player1_current_frame * PLAYER1_UP_NUMBER_TILES_BY_FRAME + PLAYER1_UP_NUMBER_TILES_FRAMES_BOTH_DIRECTIONS *j + i);
   0107 3Ar04r00      [13]  329 	ld	a,(#_player1_current_frame + 0)
   010A 87            [ 4]  330 	add	a, a
   010B 6F            [ 4]  331 	ld	l,a
   010C 09            [11]  332 	add	hl, bc
   010D 7D            [ 4]  333 	ld	a,l
   010E DD 86 FF      [19]  334 	add	a, -1 (ix)
   0111 83            [ 4]  335 	add	a, e
   0112 DD 77 FD      [19]  336 	ld	-3 (ix),a
   0115 3Ar03r00      [13]  337 	ld	a,(#_player1_y + 0)
   0118 DD 86 FE      [19]  338 	add	a, -2 (ix)
   011B 57            [ 4]  339 	ld	d,a
   011C 7B            [ 4]  340 	ld	a,e
   011D 07            [ 4]  341 	rlca
   011E 07            [ 4]  342 	rlca
   011F 07            [ 4]  343 	rlca
   0120 E6 F8         [ 7]  344 	and	a,#0xf8
   0122 6F            [ 4]  345 	ld	l,a
   0123 3Ar02r00      [13]  346 	ld	a,(#_player1_x + 0)
   0126 85            [ 4]  347 	add	a, l
   0127 47            [ 4]  348 	ld	b,a
   0128 C5            [11]  349 	push	bc
   0129 D5            [11]  350 	push	de
   012A DD 7E FD      [19]  351 	ld	a,-3 (ix)
   012D F5            [11]  352 	push	af
   012E 33            [ 6]  353 	inc	sp
   012F D5            [11]  354 	push	de
   0130 33            [ 6]  355 	inc	sp
   0131 C5            [11]  356 	push	bc
   0132 33            [ 6]  357 	inc	sp
   0133 CDr00r00      [17]  358 	call	_SMS_addSprite
   0136 F1            [10]  359 	pop	af
   0137 33            [ 6]  360 	inc	sp
   0138 D1            [10]  361 	pop	de
   0139 C1            [10]  362 	pop	bc
                            363 ;Players/players.h:95: for(i=0; i<2; i++) {
   013A 1C            [ 4]  364 	inc	e
   013B 7B            [ 4]  365 	ld	a,e
   013C D6 02         [ 7]  366 	sub	a, #0x02
   013E 38 C7         [12]  367 	jr	C,00144$
                            368 ;Players/players.h:93: for(j=0; j<3; j++)
   0140 DD 7E FF      [19]  369 	ld	a,-1 (ix)
   0143 C6 0C         [ 7]  370 	add	a, #0x0c
   0145 DD 77 FF      [19]  371 	ld	-1 (ix),a
   0148 DD 34 FB      [23]  372 	inc	-5 (ix)
   014B DD 7E FB      [19]  373 	ld	a,-5 (ix)
   014E D6 03         [ 7]  374 	sub	a, #0x03
   0150 38 A8         [12]  375 	jr	C,00163$
   0152 C3r2Er02      [10]  376 	jp	00126$
   0155                     377 00125$:
                            378 ;Players/players.h:100: else if(player1_direction == DOWN)
   0155 3Ar05r00      [13]  379 	ld	a,(#_player1_direction + 0)
   0158 3D            [ 4]  380 	dec	a
   0159 20 6A         [12]  381 	jr	NZ,00122$
                            382 ;Players/players.h:102: for(j=0; j<3; j++)
   015B DD 36 FB 00   [19]  383 	ld	-5 (ix),#0x00
   015F DD 36 FD 00   [19]  384 	ld	-3 (ix),#0x00
                            385 ;Players/players.h:104: for(i=0; i<2; i++) {
   0163                     386 00168$:
   0163 DD 7E FB      [19]  387 	ld	a,-5 (ix)
   0166 07            [ 4]  388 	rlca
   0167 07            [ 4]  389 	rlca
   0168 07            [ 4]  390 	rlca
   0169 E6 F8         [ 7]  391 	and	a,#0xf8
   016B DD 77 FE      [19]  392 	ld	-2 (ix),a
   016E DD 36 FC 00   [19]  393 	ld	-4 (ix),#0x00
   0172                     394 00148$:
                            395 ;Players/players.h:105: SMS_addSprite(player1_x+(i<<3), player1_y+(j<<3), PLAYER1_DOWN_SPRITE_TILES_POSITION + direction_offset + player1_current_frame * PLAYER1_DOWN_NUMBER_TILES_BY_FRAME + PLAYER1_DOWN_NUMBER_TILES_FRAMES_BOTH_DIRECTIONS *j + i);
   0172 79            [ 4]  396 	ld	a,c
   0173 C6 38         [ 7]  397 	add	a, #0x38
   0175 6F            [ 4]  398 	ld	l,a
   0176 3Ar04r00      [13]  399 	ld	a,(#_player1_current_frame + 0)
   0179 87            [ 4]  400 	add	a, a
   017A 5F            [ 4]  401 	ld	e,a
   017B 19            [11]  402 	add	hl, de
   017C DD 5E FD      [19]  403 	ld	e,-3 (ix)
   017F 19            [11]  404 	add	hl, de
   0180 DD 5E FC      [19]  405 	ld	e,-4 (ix)
   0183 7D            [ 4]  406 	ld	a,l
   0184 83            [ 4]  407 	add	a, e
   0185 57            [ 4]  408 	ld	d,a
   0186 3Ar03r00      [13]  409 	ld	a,(#_player1_y + 0)
   0189 DD 86 FE      [19]  410 	add	a, -2 (ix)
   018C 47            [ 4]  411 	ld	b,a
   018D DD 7E FC      [19]  412 	ld	a,-4 (ix)
   0190 07            [ 4]  413 	rlca
   0191 07            [ 4]  414 	rlca
   0192 07            [ 4]  415 	rlca
   0193 E6 F8         [ 7]  416 	and	a,#0xf8
   0195 5F            [ 4]  417 	ld	e,a
   0196 3Ar02r00      [13]  418 	ld	a,(#_player1_x + 0)
   0199 83            [ 4]  419 	add	a, e
   019A C5            [11]  420 	push	bc
   019B D5            [11]  421 	push	de
   019C 33            [ 6]  422 	inc	sp
   019D C5            [11]  423 	push	bc
   019E 33            [ 6]  424 	inc	sp
   019F F5            [11]  425 	push	af
   01A0 33            [ 6]  426 	inc	sp
   01A1 CDr00r00      [17]  427 	call	_SMS_addSprite
   01A4 F1            [10]  428 	pop	af
   01A5 33            [ 6]  429 	inc	sp
   01A6 C1            [10]  430 	pop	bc
                            431 ;Players/players.h:104: for(i=0; i<2; i++) {
   01A7 DD 34 FC      [23]  432 	inc	-4 (ix)
   01AA DD 7E FC      [19]  433 	ld	a,-4 (ix)
   01AD D6 02         [ 7]  434 	sub	a, #0x02
   01AF 38 C1         [12]  435 	jr	C,00148$
                            436 ;Players/players.h:102: for(j=0; j<3; j++)
   01B1 DD 7E FD      [19]  437 	ld	a,-3 (ix)
   01B4 C6 0C         [ 7]  438 	add	a, #0x0c
   01B6 DD 77 FD      [19]  439 	ld	-3 (ix),a
   01B9 DD 34 FB      [23]  440 	inc	-5 (ix)
   01BC DD 7E FB      [19]  441 	ld	a,-5 (ix)
   01BF D6 03         [ 7]  442 	sub	a, #0x03
   01C1 38 A0         [12]  443 	jr	C,00168$
   01C3 18 69         [12]  444 	jr	00126$
   01C5                     445 00122$:
                            446 ;Players/players.h:109: else if(player1_direction == LEFT || player1_direction == RIGHT)
   01C5 78            [ 4]  447 	ld	a,b
   01C6 B7            [ 4]  448 	or	a, a
   01C7 20 07         [12]  449 	jr	NZ,00175$
   01C9 3Ar05r00      [13]  450 	ld	a,(#_player1_direction + 0)
   01CC D6 03         [ 7]  451 	sub	a, #0x03
   01CE 20 5E         [12]  452 	jr	NZ,00126$
                            453 ;Players/players.h:111: for(j=0; j<3; j++)
   01D0                     454 00175$:
   01D0 DD 36 FB 00   [19]  455 	ld	-5 (ix),#0x00
   01D4 DD 36 FD 00   [19]  456 	ld	-3 (ix),#0x00
                            457 ;Players/players.h:113: for(i=0; i<2; i++) {
   01D8                     458 00173$:
   01D8 DD 7E FB      [19]  459 	ld	a,-5 (ix)
   01DB 07            [ 4]  460 	rlca
   01DC 07            [ 4]  461 	rlca
   01DD 07            [ 4]  462 	rlca
   01DE E6 F8         [ 7]  463 	and	a,#0xf8
   01E0 DD 77 FE      [19]  464 	ld	-2 (ix),a
   01E3 1E 00         [ 7]  465 	ld	e,#0x00
   01E5                     466 00152$:
                            467 ;Players/players.h:114: SMS_addSprite(player1_x+(i<<3), player1_y+(j<<3), PLAYER1_LR_SPRITE_TILES_POSITION + direction_offset + player1_current_frame * PLAYER1_LR_NUMBER_TILES_BY_FRAME + PLAYER1_LR_NUMBER_TILES_FRAMES_BOTH_DIRECTIONS *j + i);
   01E5 79            [ 4]  468 	ld	a,c
   01E6 C6 70         [ 7]  469 	add	a, #0x70
   01E8 47            [ 4]  470 	ld	b,a
   01E9 3Ar04r00      [13]  471 	ld	a,(#_player1_current_frame + 0)
   01EC 87            [ 4]  472 	add	a, a
   01ED 80            [ 4]  473 	add	a,b
   01EE 6F            [ 4]  474 	ld	l,a
   01EF DD 46 FD      [19]  475 	ld	b,-3 (ix)
   01F2 7D            [ 4]  476 	ld	a,l
   01F3 80            [ 4]  477 	add	a, b
   01F4 53            [ 4]  478 	ld	d, e
   01F5 82            [ 4]  479 	add	a, d
   01F6 47            [ 4]  480 	ld	b,a
   01F7 3Ar03r00      [13]  481 	ld	a,(#_player1_y + 0)
   01FA DD 86 FE      [19]  482 	add	a, -2 (ix)
   01FD 57            [ 4]  483 	ld	d,a
   01FE 7B            [ 4]  484 	ld	a,e
   01FF 07            [ 4]  485 	rlca
   0200 07            [ 4]  486 	rlca
   0201 07            [ 4]  487 	rlca
   0202 E6 F8         [ 7]  488 	and	a,#0xf8
   0204 6F            [ 4]  489 	ld	l,a
   0205 3Ar02r00      [13]  490 	ld	a,(#_player1_x + 0)
   0208 85            [ 4]  491 	add	a, l
   0209 C5            [11]  492 	push	bc
   020A D5            [11]  493 	push	de
   020B 4A            [ 4]  494 	ld	c, d
   020C C5            [11]  495 	push	bc
   020D F5            [11]  496 	push	af
   020E 33            [ 6]  497 	inc	sp
   020F CDr00r00      [17]  498 	call	_SMS_addSprite
   0212 F1            [10]  499 	pop	af
   0213 33            [ 6]  500 	inc	sp
   0214 D1            [10]  501 	pop	de
   0215 C1            [10]  502 	pop	bc
                            503 ;Players/players.h:113: for(i=0; i<2; i++) {
   0216 1C            [ 4]  504 	inc	e
   0217 7B            [ 4]  505 	ld	a,e
   0218 D6 02         [ 7]  506 	sub	a, #0x02
   021A 38 C9         [12]  507 	jr	C,00152$
                            508 ;Players/players.h:111: for(j=0; j<3; j++)
   021C DD 7E FD      [19]  509 	ld	a,-3 (ix)
   021F C6 18         [ 7]  510 	add	a, #0x18
   0221 DD 77 FD      [19]  511 	ld	-3 (ix),a
   0224 DD 34 FB      [23]  512 	inc	-5 (ix)
   0227 DD 7E FB      [19]  513 	ld	a,-5 (ix)
   022A D6 03         [ 7]  514 	sub	a, #0x03
   022C 38 AA         [12]  515 	jr	C,00173$
   022E                     516 00126$:
                            517 ;Players/players.h:119: if((time%6) == 0) {
   022E 3E 06         [ 7]  518 	ld	a,#0x06
   0230 F5            [11]  519 	push	af
   0231 33            [ 6]  520 	inc	sp
   0232 DD 7E 04      [19]  521 	ld	a,4 (ix)
   0235 F5            [11]  522 	push	af
   0236 33            [ 6]  523 	inc	sp
   0237 CDr00r00      [17]  524 	call	__moduchar
   023A F1            [10]  525 	pop	af
   023B 7D            [ 4]  526 	ld	a,l
   023C B7            [ 4]  527 	or	a, a
   023D 20 53         [12]  528 	jr	NZ,00156$
                            529 ;Players/players.h:120: player1_current_frame++;
   023F 21r04r00      [10]  530 	ld	hl, #_player1_current_frame+0
   0242 34            [11]  531 	inc	(hl)
                            532 ;Players/players.h:122: if(player1_direction == UP)
   0243 3Ar05r00      [13]  533 	ld	a,(#_player1_direction + 0)
   0246 B7            [ 4]  534 	or	a, a
   0247 20 11         [12]  535 	jr	NZ,00140$
                            536 ;Players/players.h:124: if(player1_current_frame == PLAYER1_UP_NUMBER_FRAMES) {
   0249 FD 21r04r00   [14]  537 	ld	iy,#_player1_current_frame
   024D FD 7E 00      [19]  538 	ld	a,0 (iy)
   0250 D6 06         [ 7]  539 	sub	a, #0x06
   0252 20 3E         [12]  540 	jr	NZ,00156$
                            541 ;Players/players.h:125: player1_current_frame = 0;
   0254 FD 36 00 00   [19]  542 	ld	0 (iy),#0x00
   0258 18 38         [12]  543 	jr	00156$
   025A                     544 00140$:
                            545 ;Players/players.h:128: else if(player1_direction == DOWN)
   025A 3Ar05r00      [13]  546 	ld	a,(#_player1_direction + 0)
   025D 3D            [ 4]  547 	dec	a
   025E 20 11         [12]  548 	jr	NZ,00137$
                            549 ;Players/players.h:130: if(player1_current_frame == PLAYER1_DOWN_NUMBER_FRAMES) {
   0260 FD 21r04r00   [14]  550 	ld	iy,#_player1_current_frame
   0264 FD 7E 00      [19]  551 	ld	a,0 (iy)
   0267 D6 06         [ 7]  552 	sub	a, #0x06
   0269 20 27         [12]  553 	jr	NZ,00156$
                            554 ;Players/players.h:131: player1_current_frame = 0;
   026B FD 36 00 00   [19]  555 	ld	0 (iy),#0x00
   026F 18 21         [12]  556 	jr	00156$
   0271                     557 00137$:
                            558 ;Players/players.h:134: else if(player1_direction == LEFT || player1_direction == RIGHT)
   0271 FD 21r05r00   [14]  559 	ld	iy,#_player1_direction
   0275 FD 7E 00      [19]  560 	ld	a,0 (iy)
   0278 D6 02         [ 7]  561 	sub	a, #0x02
   027A 28 07         [12]  562 	jr	Z,00133$
   027C FD 7E 00      [19]  563 	ld	a,0 (iy)
   027F D6 03         [ 7]  564 	sub	a, #0x03
   0281 20 0F         [12]  565 	jr	NZ,00156$
   0283                     566 00133$:
                            567 ;Players/players.h:136: if(player1_current_frame == PLAYER1_LR_NUMBER_FRAMES) {
   0283 FD 21r04r00   [14]  568 	ld	iy,#_player1_current_frame
   0287 FD 7E 00      [19]  569 	ld	a,0 (iy)
   028A D6 06         [ 7]  570 	sub	a, #0x06
   028C 20 04         [12]  571 	jr	NZ,00156$
                            572 ;Players/players.h:137: player1_current_frame = 0;
   028E FD 36 00 00   [19]  573 	ld	0 (iy),#0x00
   0292                     574 00156$:
   0292 DD F9         [10]  575 	ld	sp, ix
   0294 DD E1         [14]  576 	pop	ix
   0296 C9            [10]  577 	ret
                            578 ;main.c:7: void loadGraphics2vram(void)
                            579 ;	---------------------------------
                            580 ; Function loadGraphics2vram
                            581 ; ---------------------------------
   0297                     582 _loadGraphics2vram::
                            583 ;main.c:10: SMS_VRAMmemsetW(0, 0x0000, 0x4000);
   0297 21 00 40      [10]  584 	ld	hl,#0x4000
   029A E5            [11]  585 	push	hl
   029B 26 00         [ 7]  586 	ld	h, #0x00
   029D E5            [11]  587 	push	hl
   029E 2E 00         [ 7]  588 	ld	l, #0x00
   02A0 E5            [11]  589 	push	hl
   02A1 CDr00r00      [17]  590 	call	_SMS_VRAMmemsetW
   02A4 21 06 00      [10]  591 	ld	hl,#6
   02A7 39            [11]  592 	add	hl,sp
   02A8 F9            [ 6]  593 	ld	sp,hl
                            594 ;main.c:16: SMS_loadSpritePalette(spritepalette_bin);
   02A9 21r00r00      [10]  595 	ld	hl,#_spritepalette_bin
   02AC CDr00r00      [17]  596 	call	_SMS_loadSpritePalette
                            597 ;main.c:17: SMS_loadPSGaidencompressedTiles(spritetiles_up_psgcompr, PLAYER1_UP_SPRITE_TILES_POSITION); // Bomberman - up to player?
   02AF 21 00 01      [10]  598 	ld	hl,#0x0100
   02B2 E5            [11]  599 	push	hl
   02B3 21r00r00      [10]  600 	ld	hl,#_spritetiles_up_psgcompr
   02B6 E5            [11]  601 	push	hl
   02B7 CDr00r00      [17]  602 	call	_SMS_loadPSGaidencompressedTiles
   02BA F1            [10]  603 	pop	af
                            604 ;main.c:18: SMS_loadPSGaidencompressedTiles(spritetiles_down_psgcompr, PLAYER1_DOWN_SPRITE_TILES_POSITION); // Bomberman - up to player?
   02BB 21 38 01      [10]  605 	ld	hl, #0x0138
   02BE E3            [19]  606 	ex	(sp),hl
   02BF 21r00r00      [10]  607 	ld	hl,#_spritetiles_down_psgcompr
   02C2 E5            [11]  608 	push	hl
   02C3 CDr00r00      [17]  609 	call	_SMS_loadPSGaidencompressedTiles
   02C6 F1            [10]  610 	pop	af
                            611 ;main.c:19: SMS_loadPSGaidencompressedTiles(spritetiles_lr_psgcompr, PLAYER1_LR_SPRITE_TILES_POSITION); // Bomberman - move to player?
   02C7 21 70 01      [10]  612 	ld	hl, #0x0170
   02CA E3            [19]  613 	ex	(sp),hl
   02CB 21r00r00      [10]  614 	ld	hl,#_spritetiles_lr_psgcompr
   02CE E5            [11]  615 	push	hl
   02CF CDr00r00      [17]  616 	call	_SMS_loadPSGaidencompressedTiles
   02D2 F1            [10]  617 	pop	af
                            618 ;main.c:21: SMS_setSpritePaletteColor(0, RGB(0, 0, 0));
   02D3 21 00 00      [10]  619 	ld	hl, #0x0000
   02D6 E3            [19]  620 	ex	(sp),hl
   02D7 CDr00r00      [17]  621 	call	_SMS_setSpritePaletteColor
                            622 ;main.c:22: SMS_setBGPaletteColor(0, RGB(0, 2, 3));
   02DA 21 00 38      [10]  623 	ld	hl, #0x3800
   02DD E3            [19]  624 	ex	(sp),hl
   02DE CDr00r00      [17]  625 	call	_SMS_setBGPaletteColor
   02E1 F1            [10]  626 	pop	af
   02E2 C9            [10]  627 	ret
                            628 ;main.c:25: void main (void)
                            629 ;	---------------------------------
                            630 ; Function main
                            631 ; ---------------------------------
   02E3                     632 _main::
                            633 ;main.c:27: frame_counter = 0;
   02E3 21r06r00      [10]  634 	ld	hl,#_frame_counter + 0
   02E6 36 00         [10]  635 	ld	(hl), #0x00
                            636 ;main.c:29: Player1Init();
   02E8 CDr4Ar00      [17]  637 	call	_Player1Init
                            638 ;main.c:30: InitConsole();
   02EB CDr01r00      [17]  639 	call	_InitConsole
                            640 ;main.c:32: loadGraphics2vram();
   02EE CDr97r02      [17]  641 	call	_loadGraphics2vram
                            642 ;main.c:33: SMS_displayOn();
   02F1 21 40 01      [10]  643 	ld	hl,#0x0140
   02F4 CDr00r00      [17]  644 	call	_SMS_VDPturnOnFeature
                            645 ;main.c:35: PSGPlay(music_psg);
   02F7 21r00r00      [10]  646 	ld	hl,#_music_psg
   02FA E5            [11]  647 	push	hl
   02FB CDr00r00      [17]  648 	call	_PSGPlay
   02FE F1            [10]  649 	pop	af
                            650 ;main.c:38: while(1)
   02FF                     651 00113$:
                            652 ;main.c:41: checkgamepause();
   02FF CDr22r00      [17]  653 	call	_checkgamepause
                            654 ;main.c:43: if(gamepause==0)
   0302 3Ar01r00      [13]  655 	ld	a,(#_gamepause + 0)
   0305 B7            [ 4]  656 	or	a, a
   0306 20 50         [12]  657 	jr	NZ,00110$
                            658 ;main.c:45: frame_counter++;
   0308 FD 21r06r00   [14]  659 	ld	iy,#_frame_counter
   030C FD 34 00      [23]  660 	inc	0 (iy)
                            661 ;main.c:47: if((frame_counter%64) == 0)
   030F FD 7E 00      [19]  662 	ld	a,0 (iy)
   0312 E6 3F         [ 7]  663 	and	a, #0x3f
   0314 20 12         [12]  664 	jr	NZ,00104$
                            665 ;main.c:49: volume_atenuation++;
   0316 FD 21r07r00   [14]  666 	ld	iy,#_volume_atenuation
   031A FD 34 00      [23]  667 	inc	0 (iy)
                            668 ;main.c:50: if(volume_atenuation > 15)
   031D 3E 0F         [ 7]  669 	ld	a,#0x0f
   031F FD 96 00      [19]  670 	sub	a, 0 (iy)
   0322 30 04         [12]  671 	jr	NC,00104$
                            672 ;main.c:52: volume_atenuation = 0;
   0324 FD 36 00 00   [19]  673 	ld	0 (iy),#0x00
   0328                     674 00104$:
                            675 ;main.c:56: SMS_initSprites();
   0328 CDr00r00      [17]  676 	call	_SMS_initSprites
                            677 ;main.c:58: Player1Update(frame_counter);
   032B 3Ar06r00      [13]  678 	ld	a,(_frame_counter)
   032E F5            [11]  679 	push	af
   032F 33            [ 6]  680 	inc	sp
   0330 CDr5Fr00      [17]  681 	call	_Player1Update
   0333 33            [ 6]  682 	inc	sp
                            683 ;main.c:60: if(SMS_getKeysStatus() & PORT_A_KEY_1)
   0334 CDr00r00      [17]  684 	call	_SMS_getKeysStatus
   0337 CB 65         [ 8]  685 	bit	4, l
   0339 28 0C         [12]  686 	jr	Z,00106$
                            687 ;main.c:62: PSGSFXPlay(enemybomb_psg, 0x00);
   033B AF            [ 4]  688 	xor	a, a
   033C F5            [11]  689 	push	af
   033D 33            [ 6]  690 	inc	sp
   033E 21r00r00      [10]  691 	ld	hl,#_enemybomb_psg
   0341 E5            [11]  692 	push	hl
   0342 CDr00r00      [17]  693 	call	_PSGSFXPlay
   0345 F1            [10]  694 	pop	af
   0346 33            [ 6]  695 	inc	sp
   0347                     696 00106$:
                            697 ;main.c:65: SMS_finalizeSprites();
   0347 CDr00r00      [17]  698 	call	_SMS_finalizeSprites
                            699 ;main.c:66: SMS_waitForVBlank();
   034A CDr00r00      [17]  700 	call	_SMS_waitForVBlank
                            701 ;main.c:68: PSGFrame();
   034D CDr00r00      [17]  702 	call	_PSGFrame
                            703 ;main.c:69: PSGSFXFrame();
   0350 CDr00r00      [17]  704 	call	_PSGSFXFrame
                            705 ;main.c:71: SMS_copySpritestoSAT();
   0353 CDr00r00      [17]  706 	call	_SMS_copySpritestoSAT
   0356 18 A7         [12]  707 	jr	00113$
   0358                     708 00110$:
                            709 ;main.c:78: PSGFrame();
   0358 CDr00r00      [17]  710 	call	_PSGFrame
                            711 ;main.c:80: if(PSGSFXGetStatus())
   035B CDr00r00      [17]  712 	call	_PSGSFXGetStatus
   035E 7D            [ 4]  713 	ld	a,l
   035F B7            [ 4]  714 	or	a, a
   0360 28 03         [12]  715 	jr	Z,00108$
                            716 ;main.c:82: PSGSFXFrame();
   0362 CDr00r00      [17]  717 	call	_PSGSFXFrame
   0365                     718 00108$:
                            719 ;main.c:86: SMS_waitForVBlank();
   0365 CDr00r00      [17]  720 	call	_SMS_waitForVBlank
                            721 ;main.c:89: numinterrupts=0;
   0368 21r00r00      [10]  722 	ld	hl,#_numinterrupts + 0
   036B 36 00         [10]  723 	ld	(hl), #0x00
   036D 18 90         [12]  724 	jr	00113$
                            725 	.area _CODE
   036F                     726 __str_0:
   036F 47 61 72 79 20 50   727 	.ascii "Gary Paluk"
        61 6C 75 6B
   0379 00                  728 	.db 0x00
   037A                     729 __str_1:
   037A 4D 61 73 74 65 72   730 	.ascii "Master Blaster"
        20 42 6C 61 73 74
        65 72
   0388 00                  731 	.db 0x00
   0389                     732 __str_2:
   0389 47 72 61 62 20 61   733 	.ascii "Grab a friend and jump into endless bombastic fun!"
        20 66 72 69 65 6E
        64 20 61 6E 64 20
        6A 75 6D 70 20 69
        6E 74 6F 20 65 6E
        64 6C 65 73 73 20
        62 6F 6D 62 61 73
        74 69 63 20 66 75
        6E 21
   03BB 00                  734 	.db 0x00
                            735 	.area _INITIALIZER
                            736 	.area _CABS (ABS)
   7FF0                     737 	.org 0x7FF0
   7FF0                     738 ___SMS__SEGA_signature:
   7FF0 54                  739 	.db #0x54	; 84	'T'
   7FF1 4D                  740 	.db #0x4d	; 77	'M'
   7FF2 52                  741 	.db #0x52	; 82	'R'
   7FF3 20                  742 	.db #0x20	; 32
   7FF4 53                  743 	.db #0x53	; 83	'S'
   7FF5 45                  744 	.db #0x45	; 69	'E'
   7FF6 47                  745 	.db #0x47	; 71	'G'
   7FF7 41                  746 	.db #0x41	; 65	'A'
   7FF8 FF                  747 	.db #0xff	; 255
   7FF9 FF                  748 	.db #0xff	; 255
   7FFA FF                  749 	.db #0xff	; 255
   7FFB FF                  750 	.db #0xff	; 255
   7FFC 99                  751 	.db #0x99	; 153
   7FFD 99                  752 	.db #0x99	; 153
   7FFE 00                  753 	.db #0x00	; 0
   7FFF 4C                  754 	.db #0x4c	; 76	'L'
   7FD5                     755 	.org 0x7FD5
   7FD5                     756 ___SMS__SDSC_author:
   7FD5 47 61 72 79 20 50   757 	.ascii "Gary Paluk"
        61 6C 75 6B
   7FDF 00                  758 	.db 0x00
   7FC6                     759 	.org 0x7FC6
   7FC6                     760 ___SMS__SDSC_name:
   7FC6 4D 61 73 74 65 72   761 	.ascii "Master Blaster"
        20 42 6C 61 73 74
        65 72
   7FD4 00                  762 	.db 0x00
   7F93                     763 	.org 0x7F93
   7F93                     764 ___SMS__SDSC_descr:
   7F93 47 72 61 62 20 61   765 	.ascii "Grab a friend and jump into endless bombastic fun!"
        20 66 72 69 65 6E
        64 20 61 6E 64 20
        6A 75 6D 70 20 69
        6E 74 6F 20 65 6E
        64 6C 65 73 73 20
        62 6F 6D 62 61 73
        74 69 63 20 66 75
        6E 21
   7FC5 00                  766 	.db 0x00
   7FE0                     767 	.org 0x7FE0
   7FE0                     768 ___SMS__SDSC_signature:
   7FE0 53                  769 	.db #0x53	; 83	'S'
   7FE1 44                  770 	.db #0x44	; 68	'D'
   7FE2 53                  771 	.db #0x53	; 83	'S'
   7FE3 43                  772 	.db #0x43	; 67	'C'
   7FE4 01                  773 	.db #0x01	; 1
   7FE5 00                  774 	.db #0x00	; 0
   7FE6 11                  775 	.db #0x11	; 17
   7FE7 07                  776 	.db #0x07	; 7
   7FE8 22                  777 	.db #0x22	; 34
   7FE9 20                  778 	.db #0x20	; 32
   7FEA D5                  779 	.db #0xd5	; 213
   7FEB 7F                  780 	.db #0x7f	; 127
   7FEC C6                  781 	.db #0xc6	; 198
   7FED 7F                  782 	.db #0x7f	; 127
   7FEE 93                  783 	.db #0x93	; 147
   7FEF 7F                  784 	.db #0x7f	; 127
